{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/luma/www/nlw4/moveit-next/moveit2/src/contexts/ChallengesContext.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  function startNewChallenge() {\n    _s();\n\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n\n    var _useState4 = useState(null),\n        activeChallenge = _useState4[0],\n        setActiveChallenge = _useState4[1];\n  }\n\n  _s(startNewChallenge, \"eFUIHdmYGte9lQExFnzgCD41nss=\");\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ChallengesProvider, \"WiLIgsF294OUw+/jaYJymAtoAWQ=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/luma/www/nlw4/moveit-next/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","activeChallenge","setActiveChallenge"],"mappings":";;;;;AAAA,SAAUA,aAAV,EAAyBC,QAAzB,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAaA,OAAO,IAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,OAAmE;AAAA;;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC5CJ,QAAQ,CAAC,CAAD,CADoC;AAAA,MAC/DK,KAD+D;AAAA,MACxDC,QADwD;;AAAA,mBAEnBN,QAAQ,CAAC,CAAD,CAFW;AAAA,MAE9DO,iBAF8D;AAAA,MAE3CC,oBAF2C;;AAAA,mBAGfR,QAAQ,CAAC,CAAD,CAHO;AAAA,MAG9DS,mBAH8D;AAAA,MAGzCC,sBAHyC;;AAKtE,WAASC,iBAAT,GAA6B;AAAA;;AACzB,QAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,UAAU,CAACe,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGhB,UAAU,CAACW,oBAAD,CAA5B;;AAFyB,qBAIqBZ,QAAQ,CAAC,IAAD,CAJ7B;AAAA,QAIlBkB,eAJkB;AAAA,QAIDC,kBAJC;AAK5B;;AAVqE,KAK7DR,iBAL6D;;AAWtE,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHN,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,iBAAiB,EAAjBA,iBAFG;AAGHE,MAAAA,mBAAmB,EAAnBA,mBAHG;AAIHE,MAAAA,iBAAiB,EAAjBA;AAJG,KADP;AAAA,cAOKP;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;IAvBeD,kB;;KAAAA,kB","sourcesContent":["import {  createContext, useState, ReactNode  } from 'react';\nimport challenges from '../../challenges.json';\n\ninterface ChallengesContextData {\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n    startNewChallenge: () => void\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData)\n\nexport function ChallengesProvider ({children} : ChallengesProviderProps) {\n    const [level, setLevel] = useState(1);\n    const [ currentExperience, setCurrentExperience] = useState(0)\n    const [ challengesCompleted, setChallengesCompleted] = useState(0)\n    \n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex]\n\n        const [activeChallenge, setActiveChallenge] = useState(null)\n    }\n    return (\n        <ChallengesContext.Provider \n        value={{\n            level, \n            currentExperience, \n            challengesCompleted,\n            startNewChallenge,\n            }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}