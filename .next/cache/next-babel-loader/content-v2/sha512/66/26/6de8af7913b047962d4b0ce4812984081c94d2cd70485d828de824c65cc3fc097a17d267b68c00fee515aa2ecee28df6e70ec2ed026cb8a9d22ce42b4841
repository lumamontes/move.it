{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luma/www/nlw4/moveit-next/moveit2/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function startNewChallenge() {\n    console.log('novo desafio.');\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/luma/www/nlw4/moveit-next/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","startNewChallenge","console","log"],"mappings":";;AAAA,SAAUA,aAAV,EAAyBC,QAAzB,QAAqD,OAArD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAAmE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAAEM,iBAAF;AAAA,OAAqBC;AAArB,MAA6CP,QAAQ,CAAC,CAAD,CAA3D;AACA,QAAM;AAAA,OAAEQ,mBAAF;AAAA,OAAuBC;AAAvB,MAAiDT,QAAQ,CAAC,CAAD,CAA/D;;AAEA,WAASU,iBAAT,GAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AACD,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHR,MAAAA,KADG;AAEHE,MAAAA,iBAFG;AAGHE,MAAAA,mBAHG;AAIHE,MAAAA;AAJG,KADP;AAAA,cAQKP;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH","sourcesContent":["import {  createContext, useState, ReactNode  } from 'react';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport function ChallengesProvider ({children} : ChallengesProviderProps) {\n    const [level, setLevel] = useState(1);\n    const [ currentExperience, setCurrentExperience] = useState(0)\n    const [ challengesCompleted, setChallengesCompleted] = useState(0)\n    \n    function startNewChallenge() {\n        console.log('novo desafio.')\n    }\n    return (\n        <ChallengesContext.Provider \n        value={{\n            level, \n            currentExperience, \n            challengesCompleted,\n            startNewChallenge,\n            \n            }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}